{"version":3,"sources":["webpack:///webpack/bootstrap f76e353c4c3ccdee198c","webpack:///./src/views/welcomeUI.js","webpack:///./src/models/questions.js","webpack:///./src/app.js","webpack:///./src/models/player.js","webpack:///./src/views/gameUI.js","webpack:///./src/views/registrationUI.js","webpack:///./src/models/players.js","webpack:///./src/views/adminUI.js","webpack:///./src/views/leaderboardUI.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;AC1EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,8BAA8B;AAC9B,iEAAiE;AACjE;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,iCAAiC;AACjC,oEAAoE;AACpE;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;;;;;;;AC/EA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wB;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;ACNA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,KAAK;AACL;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;AC/FA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;ACzDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,8BAA8B;AAC9B,iEAAiE;AACjE;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,yB;;;;;;AC1CA;;AAEA,2B;;;;;;ACFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f76e353c4c3ccdee198c","var gameUI = require('./gameUI.js');\nvar registrationUI = require('./registrationUI.js');\nvar leaderboardUI = require('./leaderboardUI.js');\nvar adminUI = require('./adminUI');\n\n\nvar welcomeUI = function() {\n  this.createWelcomeText();\n  this.createPlayButton();\n  this.createRegisterButton();\n  this.createLeaderboardButton();\n  this.createAdminButton();\n}\n\nwelcomeUI.prototype = {\n\n  createWelcomeText: function() {\n    var welcomeText = document.createElement('p');\n    welcomeText.innerText = \"This is a game\";\n    var div = document.getElementById('main')\n    div.appendChild(welcomeText);\n  }, \n\n  handlePlayButtonClick: function() {\n    this.style.cssText = \"display: none\";\n    new gameUI();\n  },\n\n  handleLeaderboardButtonClick: function(){\n    this.style.cssText = \"display: none\";\n    new leaderboardUI();\n  },\n\n  handleRegisterButtonClick: function() {\n    new registrationUI();\n  },\n\n  handleAdminButtonClick: function(){\n    new adminUI();\n  },\n\n  createPlayButton: function() {\n    var playButton = document.createElement('button');\n    playButton.innerText = \"PLAY\";\n    var div = document.getElementById('main')\n    div.appendChild(playButton);\n    playButton.onclick = this.handlePlayButtonClick;\n  }, \n\n  createRegisterButton: function() {\n    var registerButton = document.createElement('button');\n    registerButton.innerText = \"REGISTER\";\n    var div = document.getElementById('main')\n    div.appendChild(registerButton);\n    registerButton.onclick = this.handleRegisterButtonClick;\n  },\n\n  createLeaderboardButton: function(){\n    var leaderboardButton = document.createElement('button');\n    leaderboardButton.innerText = \"LEADERBOARD\";\n    var div = document.getElementById('main');\n    div.appendChild(leaderboardButton);\n    leaderboardButton.onclick = this.handleLeaderboardButtonClick;\n  },\n\n  createAdminButton: function(){\n    var adminButton = document.createElement('button');\n    adminButton.innerText = \"ADMIN\";\n    var div = document.getElementById(\"main\");\n    div.appendChild(adminButton);\n    adminButton.onclick = this.handleAdminButton;\n  }\n}\n\nmodule.exports = welcomeUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/welcomeUI.js\n// module id = 1\n// module chunks = 0","var Questions = function() {\n}\n\nQuestions.prototype = {\n  makeRequest: function(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('GET', url);\n    request.onload = callback;\n    request.send();\n  }, \n\n  makePostRequest: function(url, callback, entryData) {\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url);//we request the POST connection\n    request.setRequestHeader(\"Content-type\", \"application/json\");//hey api, the POSTed file is in JSON\n    request.onload = callback;\n    request.send(entryData);\n  },\n\n  makePutRequest: function(url, callback, entryData){\n    request.open(\"PUT\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send(entryData);\n  },\n\n  makeDeleteRequest: function(url, callback){\n    request.open(\"DELETE\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send();\n  },\n\n  // makePostRequest: function(url, callback, entryData) {\n  //   var request = new XMLHttpRequest();\n  //   request.open(\"POST\", url);//we request the POST connection\n  //   request.setRequestHeader(\"Content-type\", \"application/json\");//hey api, the POSTed file is in JSON\n  //   request.onload = callback;\n  //   request.send(entryData);\n  // },\n\n  // /////////////////////TO BE CHECKED/////////////////////////////////////////////////\n  // makePutRequest: function(url, callback, entryData){\n  //   request.open(\"PUT\", url);\n  //   request.setRequestHeader(\"Content-type\", \"application/json\");\n  //   request.onload = callback;\n  //   request.send(entryData);\n  // },\n\n  // makeDeleteRequest: function(url, callback){\n  //   request.open(\"DELETE\", url);\n  //   request.setRequestHeader(\"Content-type\", \"application/json\");\n  //   request.onload = callback;\n  //   request.send();\n  // },\n\n  all: function(callback) {\n    this.makeRequest('http://localhost:3000/api/questions', function() {\n      if (this.status != 200) return;\n        var jsonString = this.responseText;\n        var result = JSON.parse(jsonString);\n        callback(result);\n    });\n  }\n  // add: function(newQuestion, callback){\n  //   var questionToAdd = JSON.stringify(newQuestion);\n  //   this.makePostRequest('http://localhost:3000/api/questions', questionToAdd, callback);\n  // },\n\n  // update: function(question, callback){\n  //   var questionUpdate = JSON.stringify(question);\n  //   this.makePutRequest('http//localhost:3000/api/questions', questionUpdate, callback);\n  // },\n\n  // delete: function(question, callback){\n  //   this.makeDeleteRequest(\"http//localhost:3000/api/questions\", question, callback);\n  // }\n}\n\nmodule.exports = Questions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/questions.js\n// module id = 2\n// module chunks = 0","var gameUI = require('./views/gameUI.js');\nvar welcomeUI = require('./views/welcomeUI.js');\nvar registrationUI = require('./views/registrationUI.js');\n\nvar app = function() {\n  new gameUI();\n}\n\nvar welcome = function() {\n  new welcomeUI();\n}\n\nvar registration = function() {\n  new registrationUI();\n}\n\nwindow.onload = welcome;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 3\n// module chunks = 0","var Player = function(options){\n  this.name = options.name;\n  this.password = options.password;\n  this.scores = options.scores;\n};\n\nmodule.exports = Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/player.js\n// module id = 4\n// module chunks = 0","var Questions = require('../models/questions');\nvar Player = require('../models/player')\n\nvar currentPlayer;\nvar questionsArray;\nvar questionIndex;\n\nvar gameUI = function() {\n  var questions = new Questions();\n  questions.all(function(result) {\n    questionsArray = result;\n    questionIndex = 0;\n    this.render(questionsArray[questionIndex]);\n  }.bind(this));\n  this.setupPlayer();\n}\n\ngameUI.prototype = {\n  createText: function(text) {\n    var p = document.createElement('p');\n    p.innerText = text;\n    return p;\n  }, \n\n  setupPlayer: function() {\n    var currentSavedPlayer = localStorage.getItem(\"currentPlayer\");\n    if (!currentSavedPlayer) {\n      currentPlayer = {\n        name: \"Test Player\", \n        score: 0\n      };\n      this.savePlayer(currentPlayer);\n    } else {\n      currentPlayer = JSON.parse(currentSavedPlayer);\n    }\n  },\n\n  appendText: function(element, text) {\n    var pTag = this.createText(text);\n    element.appendChild(pTag);\n  }, \n\n  savePlayer: function(playerObject) {\n    var dataToSave = JSON.stringify(playerObject);\n    localStorage.setItem(\"currentPlayer\", dataToSave);\n  },\n\n  checkAnswer: function(selectedAnswer, correctAnswer) {\n    if (selectedAnswer === correctAnswer) {\n      console.log(\"correct\");\n      currentPlayer.score += 1;\n      this.savePlayer(currentPlayer);\n      var correctSound = new Audio('data:audio/wav;base64,');\n      correctSound.play();\n    } else {\n      console.log(\"incorrect\");\n      var wrongSound = new Audio(\"data:audio/wav;base64,\");\n      wrongSound.play();\n      console.log(\"incorrect\");\n    }\n    questionIndex += 1;\n    this.removeQuestion();\n    this.render(questionsArray[questionIndex]);\n  },\n\n  removeQuestion: function() {\n    var divToRemove = document.getElementById(\"question\");\n    while (divToRemove.firstChild) {\n        divToRemove.removeChild(divToRemove.firstChild);\n    }\n  },\n\n  renderButtons: function(question) {\n    var containerDiv = document.getElementById('question');\n    question.possibleAnswers.forEach(function(answer) {\n      var answerButton = document.createElement('button');\n      this.appendText(answerButton, answer);\n      containerDiv.appendChild(answerButton);\n      answerButton.addEventListener('click', function(){\n          this.checkAnswer(answer, question.correctAnswer);\n      }.bind(this));\n    }.bind(this));\n  },\n\n  render: function(question) {\n    if (questionIndex < questionsArray.length) {\n      var containerDiv = document.getElementById('question');\n      var p = document.createElement('p');\n      this.appendText(p, question.questionString)\n      containerDiv.appendChild(p);\n      this.renderButtons(question);\n    }\n  }\n}\n\nmodule.exports = gameUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/gameUI.js\n// module id = 6\n// module chunks = 0","var welcomeUI = require('./welcomeUI.js');\n\nvar registrationUI = function() {\n  this.removeContent(\"question\");\n  this.removeContent(\"main\");\n  this.createForm();\n}\n\nregistrationUI.prototype = {\n  removeContent: function(htmlElementId) {\n    var toClear = document.getElementById(htmlElementId);\n    while (toClear.firstChild) {\n        toClear.removeChild(toClear.firstChild);\n    }\n  }, \n\n  createInputField: function(form, type, name, value) {\n    var input = document.createElement(\"input\");\n    input.type = type;\n    input.value = value;\n    input.name = name;\n    form.appendChild(input);\n  },\n\n  createSubmitButton: function(form, type, value) {\n    var input = document.createElement(\"input\");\n    input.type = type;\n    input.value = value;\n    form.appendChild(input);\n    return input;\n  },\n\n  handleGoBackButtonClick: function(){\n    window.location = \"/\";\n  },\n\n  createGoBackButton: function(){\n    var container = document.getElementById(\"main\");\n    var goBackButton = document.createElement(\"button\");\n    goBackButton.innerText = \"GO BACK\";\n    container.appendChild(goBackButton);\n    goBackButton.onclick = this.handleGoBackButtonClick;\n  },\n\n  createForm: function() {\n    var container = document.getElementById(\"main\");\n    var form = document.createElement(\"form\");\n    form.action = \"/api/players/\"; \n    form.method=\"post\";\n    container.appendChild(form);\n    this.createInputField(form, \"text\", \"name\", \"Name\");\n    this.createInputField(form, \"text\", \"password\", \"Password\");\n    var submitButton = this.createSubmitButton(form, \"submit\", \"SUBMIT\");\n    this.createGoBackButton();\n  }\n};\n\nmodule.exports = registrationUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/registrationUI.js\n// module id = 7\n// module chunks = 0","var Players = function(){};\n\nPlayers.prototype = {\n  makeRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open('GET', url);\n    request.onload = callback;\n    request.send();\n  },\n\n  all: function(callback){\n    this.makeRequest('http://localhost:3000/api/players', function(){\n      if(this.status !== 200) return;\n      var jsonString = this.responseText;\n      var result = JSON.parse(jsonString);\n      callback(result);\n    });\n  },\n\n  makePostRequest: function(url, callback, entryData) {\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url);//we request the POST connection\n    request.setRequestHeader(\"Content-type\", \"application/json\");//hey api, the POSTed file is in JSON\n    request.onload = callback;\n    request.send(entryData);\n  },\n\n  makePutRequest: function(url, callback, entryData){\n    request.open(\"PUT\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send(entryData);\n  },\n\n  makeDeleteRequest: function(url, callback){\n    request.open(\"DELETE\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send();\n  },\n}\n\nmodule.exports = Players;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/players.js\n// module id = 8\n// module chunks = 0","var Questions = require('../models/questions.js');\n\nvar adminUI = function(){};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/adminUI.js\n// module id = 9\n// module chunks = 0","var Players = require('../models/players');\n\nvar leaderboardUI = function(){\n  this.removeContent(\"quiz\");\n  this.removeContent(\"main\");\n  this.createGoBackButton();\n  var players = new Players();\n  players.all(function(result){\n    this.render(result);\n  }.bind(this));\n};\n\nleaderboardUI.prototype = {\n  removeContent: function(htmlElementId) {\n    var toClear = document.getElementById(htmlElementId);\n    while (toClear.firstChild) {\n        toClear.removeChild(toClear.firstChild);\n    }\n  }, \n\n  render: function(players){\n    var maindiv = document.getElementById('main');\n    var list = document.createElement('ol');\n    var sortedArray = players.sort(function(a, b){\n      return a.scores - b.scores;\n    }).reverse();\n    for(var player of sortedArray){\n      var li = document.createElement('li');\n      li.innerText = \"NAME: \" + player.name + \" \\n SCORES(total): \" + player.scores + \"\";\n      list.appendChild(li);\n    }\n    maindiv.appendChild(list);\n  },\n\n  handleGoBackButtonClick: function(){\n    window.location = \"/\";\n  },\n\n  createGoBackButton: function(){\n    var container = document.getElementById(\"main\");\n    var goBackButton = document.createElement(\"button\");\n    goBackButton.innerText = \"GO BACK\";\n    container.appendChild(goBackButton);\n    goBackButton.onclick = this.handleGoBackButtonClick;\n  }\n}\n\n\nmodule.exports = leaderboardUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/leaderboardUI.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}